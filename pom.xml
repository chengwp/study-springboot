<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.cwp.study</groupId>
    <artifactId>study-springboot</artifactId>
    <version>0.0.1</version>
    <name>study-springboot</name>
    <packaging>pom</packaging>
    <description>Demo project for Spring Boot</description>

    <modules>

        <module>study-common</module>
        <module>study-dao</module>
        <module>study-middleware</module>
        <module>study-biz</module>
        <module>study-web</module>
        <module>code-generator</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <study.version>0.0.1</study.version>
    </properties>

    <dependencyManagement>
        <dependencies>


            <dependency>
                <groupId>com.cwp.study</groupId>
                <artifactId>study-common</artifactId>
                <version>${study.version}</version>
            </dependency>


            <dependency>
                <groupId>com.cwp.study</groupId>
                <artifactId>study-dao</artifactId>
                <version>${study.version}</version>
            </dependency>


            <dependency>
                <groupId>com.cwp.study</groupId>
                <artifactId>study-biz</artifactId>
                <version>${study.version}</version>
            </dependency>

            <dependency>
                <groupId>com.cwp.study</groupId>
                <artifactId>study-middleware</artifactId>
                <version>${study.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>3.4.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>2.2</version>
            </dependency>



           <!-- <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.3.2.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>-->



            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>2.1.3</version>
            </dependency>



            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.47</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>2.3.2.RELEASE</version>
            </dependency>



            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <version>2.3.2.RELEASE</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>


            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.12</version>
            </dependency>

         </dependencies>
    </dependencyManagement>

    <build>




        <pluginManagement>


            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>



            </plugins>
        </pluginManagement>


        <!-- 资源目录 -->
        <resources>
            <resource>
                <!-- 设定主资源目录  -->
                <directory>src/main/java</directory>

                <!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，只处理如下配置中包含的资源类型 -->
                <includes>
                    <include>**/*.xml</include>
                </includes>

                <!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，不处理如下配置中包含的资源类型（剔除下如下配置中包含的资源类型）-->
                <excludes>
                    <exclude>**/*.yaml</exclude>
                </excludes>

                <!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，指定处理后的资源文件输出目录，默认是${build.outputDirectory}指定的目录-->
                <!--<targetPath>${build.outputDirectory}</targetPath> -->

                <!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，是否对主资源目录开启资源过滤 -->
                <filtering>true</filtering>
            </resource>

            <resource>
                <filtering>true</filtering>
                <directory>${project.basedir}/src/main/resources</directory>
                <includes>
                    <include>*.properties</include>
                    <include>*.yaml</include>
                    <include>*.yml</include>
                    <include>*.xml</include>
                </includes>
            </resource>



        </resources>

    </build>



</project>
